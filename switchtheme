#!/usr/bin/env perl


our $debug = 1;
our $theme_folder = glob "~/.config/themes";
our $Xresources = glob "~/.Xresources";
our $Xtheme =  "~/.Xtheme";
our $autoload = "~/.scripts/tools/autostart.sh"; #script to load after the theme has been changed.
our $desired_theme = "";
chomp(our @themes = `ls $theme_folder`);

chdir glob "~";

sub check_include() {
	unless (`cat $Xresources | grep '#include ".Xtheme"'`) {
		open my $in,  '<',  $Xresources or die "Can't read old file: $!";
		open my $out, '>', "$Xresources.new" or die "Can't write new file: $!";

		print $out "#include \".Xtheme\"\n\n";

		while( <$in> )
		{
			print $out $_;
		}

		close $out;
		close $in;

		print "Include not found, backing up Xresources and adding it to the top.\n";
		`mv $Xresources $Xresources.bak`;
		`mv $Xresources.new $Xresources`;
	}
}

sub process_args() {
	my $arg;
	while (($arg = shift) =~ /-\w+/) {
		print "Processing $arg.\n" if $debug;
		&print_help() and exit(0) if $arg =~ /-h/;
		&print_list() and exit(0) if $arg =~ /-l/;
		if ($arg =~ /-dmenu/) {
			my $lines = scalar @themes;
			chomp ($desired_theme = `ls $theme_folder | dmenu -l $lines`);
			next;
		}
		die ("Unknown flag: $arg.\n");
	}
	die "Please specify a theme to switch to.\n" unless ($desired_theme or $arg);
	$desired_theme or $arg;
}

sub print_help() {
	print "Usage:\n\tswitchtheme [-lh] [theme]\nFlags:\n\t -h: Print this message.\n\t -l: List available themes.\n\t -dmenu: Choose theme in a dmenu prompt.\n";
}

sub print_list() {
	print join("\n", @themes), "\n";
}

$desired_theme = &process_args(@ARGV);

$found = 0;
for $theme (@themes) {
	$found = 1 if ($theme eq $desired_theme);
	print "$theme, $desired_theme\n" if $debug;
}

die "Theme not found!\n" unless $found;

`rm ~/.Xtheme` if -e glob("~/.Xtheme");
`ln -s $theme_folder/$desired_theme .Xtheme`;
`xrdb ~/.Xresources`;

## Put whatever you wanna reload after a theme switch here
`$autoload`;
